//KC03I36A JOB ,'Tommy Franczak',MSGCLASS=H
//STEP1 EXEC PGM=ASSIST
//STEPLIB DD DSN=KC02293.ASSIST.LOADLIB,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSIN DD *
********************************************
* Assignment 3 - Pair Programmed
* Names: Tommy Franczak, Matt Rycraft
* *
* Function: Take numbers from an input file and do a mathematical
* operation on them
*
* Input: 3 lines of input are read in. First number is for which
* mathematical operation should be done on the numbers. Second number
* is the first number in the operation. Third number is the second
* number for the operation.
*
* Output: The program will output the operation done, plus num 1 and 2
* while also printing the results fromthe operation and any remainders
* After all that is printed the operation counters will be printed
* along with the total number of calculation done
*
* Entry Conds: The parameters passed to the rountines depend on the
* input file
*
* Exit Conds: After the buffer reaches the EOF and all operations
* have been completed
*
* Register Usage
*
*  2,3   Num 1 - Even Odd Pair
*  4     Num 2
*  9     Operation Type
* 10     Addition Count
* 11     Subtraction Count
* 12     Multiplication Count
* 13     Division Count     
* 15     Base Register
********************************************
MAIN     CSECT
         USING MAIN,15
         SR    10,10            Zero Operation Counts
         SR    11,11
         SR    12,12
         SR    13,13 
LOOP     XREAD BUFFER,80
         BC    B'0100',ENDLOOP  End loop if EOF reached
         SR    2,2              Assure Even Odd Pair is zeroed
         XDECI 9,BUFFER         Read operation type
         XDECI 3,0(1)           Read first num
         XDECI 4,0(1)           Read second num
         C     9,=F'1'          Is addition?
         BE    ADD
         C     9,=F'2'          Is subtraction?
         BE    SUB
         C     9,=F'3'          Is multiplication?
         BE    MULT
         C     9,=F'4'          Is division?
         BE    DIV  
AFTEROP  B     LOOP             Back to top
         SPACE
ADD      XDECO 3,ANUM1          Format first num for output
         XDECO 4,ANUM2          Format second num for output
         AR    3,4              Add both nums
         XDECO 3,ARES           Format result for output
         XPRNT ADDLINE,71       Print ADDLINE
         A     10,=F'1'         Increment Addition Count
         B     AFTEROP          Goes back to loop
         SPACE
SUB      XDECO 3,SNUM1          Format first num for output
         XDECO 4,SNUM2          Format second num for output
         SR    3,4              Subtract both nums
         XDECO 3,SRES           Format result for output
         XPRNT SUBLINE,71       Print SUBLINE
         A     11,=F'1'         Increment Subtraction Count
         B     AFTEROP          Goes back to loop
         SPACE
MULT     XDECO 3,MNUM1          Format first num for output
         XDECO 4,MNUM2          Format second num for output
         SR    2,2
         MR    2,4              Multiply both nums
         XDECO 3,MRES           Format result for output
         XPRNT MULTLINE,71      Prints MULTLINE output
         A     12,=F'1'         Increment Multiplication Count
         B     AFTEROP          Goes back to loop
         SPACE
DIV      XDECO 3,DNUM1          Format first num for output
         XDECO 4,DNUM2          Format second num for output
         C     3,=F'0'          If !(NUM1 < 0)
         BC    B'1011',POS      Num1 is positive
         S     2,=F'1'          Negate first half of num1
POS      DR    2,4              Divide first num by second
         XDECO 3,DRES           Format result for output
         XDECO 2,DREM           Format remainder for output
         XPRNT DIVLINE,101      Prints DIVLINE output
         A     13,=F'1'         Increment Division Count
         B     AFTEROP          Goes back to loop
         SPACE
ENDLOOP  DS    0C
         BR    14               Branches to end of program
BUFFER   DS    80C              Creates BUFFER variable
         SPACE
ADDLINE  DC    C'0'             Formats the ADDLINE output - 71 long
         DC    C'Addition       '
ANUM1    DS    12C
ANUM2    DS    12C
         DC    C'        Sum:       '
ARES     DS    12C
         SPACE
SUBLINE  DC    C'0'             Formats the SUBLINE output - 71 long
         DC    C'Subtraction    '
SNUM1    DS    12C
SNUM2    DS    12C
         DC    C'        Difference:'
SRES     DS    12C              
         SPACE
MULTLINE DC    C'0'             Formats the MULTLINE output - 71 long
         DC    C'Multiplication:'
MNUM1    DS    12C
MNUM2    DS    12C
         DC    C'        Product:   '
MRES     DS    12C
         SPACE
DIVLINE  DC    C'0'             Formats the DIVLINE output - 101 long
         DC    C'Division       '
DNUM1    DS    12C
DNUM2    DS    12C
         DC    C'        Quotient:  '
DRES     DS    12C
         DC    C'        Remainder:'   
DREM     DS    12C
         LTORG                  Sets the literal Origin
         SPACE
         END   MAIN
/*
//FT05F001 DD DSN=KC02314.AUTUMN17.CSCI360.HW3DATA,DISP=SHR
//
